<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>0xDEADBEEF</title>
  <id>https://dbriemann.github.io/blog</id>
  <updated>2019-06-07T21:23:11+02:00</updated>
  <subtitle>about bits and bytes and game development</subtitle>
  <link href="https://dbriemann.github.io/blog"></link>
  <author>
    <name>David Linus Briemann</name>
    <email>ragingdave@mailbox.org</email>
  </author>
  <entry>
    <title>Making a game with Go and Pixel: #2 Procedural Content Generation (PCG)</title>
    <updated>2018-06-05T12:55:19Z</updated>
    <id>tag:dbriemann.github.io,2018-06-05:/blog/7-making-a-game-with-go-and-pixel-2-procedural-content-generation-pcg.html</id>
    <link href="https://dbriemann.github.io/blog/7-making-a-game-with-go-and-pixel-2-procedural-content-generation-pcg.html" rel="alternate"></link>
    <summary type="html">This issue is about &lt;strong&gt;procedurally generating planet textures&lt;/strong&gt; solely by using simplex noise. &lt;a href=&#34;http://pcg.wikidot.com/&#34; rel=&#34;nofollow&#34;&gt;PCG&lt;/a&gt; is commonly used to create all kinds of content for games. This can increase replayability because of less repetition and also reduce the need for manual asset creation. Obviously it&amp;#39;s not a general replacement for that!</summary>
    <author>
      <name>David Linus Briemann</name>
      <email>ragingdave@mailbox.org</email>
    </author>
  </entry>
  <entry>
    <title>Making a game with Go and Pixel: #1 Game Objects &amp; Composition</title>
    <updated>2018-05-17T12:32:51Z</updated>
    <id>tag:dbriemann.github.io,2018-05-17:/blog/6-making-a-game-with-go-and-pixel-1-game-objects-and-composition.html</id>
    <link href="https://dbriemann.github.io/blog/6-making-a-game-with-go-and-pixel-1-game-objects-and-composition.html" rel="alternate"></link>
    <summary type="html">Say hello to &lt;strong&gt;Gonk&lt;/strong&gt;, the game we are going to make. You can find the code at &lt;a href=&#34;https://github.com/dbriemann/gonk&#34; rel=&#34;nofollow&#34;&gt;https://github.com/dbriemann/gonk&lt;/a&gt;. This first chapter will cover &lt;strong&gt;basic structures and functions and the use of composition for game objects&lt;/strong&gt;.</summary>
    <author>
      <name>David Linus Briemann</name>
      <email>ragingdave@mailbox.org</email>
    </author>
  </entry>
  <entry>
    <title>Making a Game with Go: Interlude</title>
    <updated>2018-04-24T08:36:03Z</updated>
    <id>tag:dbriemann.github.io,2018-04-24:/blog/5-making-a-game-with-go-interlude.html</id>
    <link href="https://dbriemann.github.io/blog/5-making-a-game-with-go-interlude.html" rel="alternate"></link>
    <summary type="html">In this short post you can read about &lt;strong&gt;why I switched from &lt;a href=&#34;https://github.com/gen2brain/raylib-go&#34; rel=&#34;nofollow&#34;&gt;raylib-go&lt;/a&gt; to &lt;a href=&#34;https://github.com/faiface/pixel&#34; rel=&#34;nofollow&#34;&gt;Pixel&lt;/a&gt;&lt;/strong&gt; for this tutorial series. If you don&amp;#39;t mind you can safely skip this issue. Did I fall into the trap of needlessly starting over with another library instead of sticking to what I have? I think I made the right choice after reconsidering my requirements.</summary>
    <author>
      <name>David Linus Briemann</name>
      <email>ragingdave@mailbox.org</email>
    </author>
  </entry>
  <entry>
    <title>Making a game with Go: #0 Introduction</title>
    <updated>2018-04-22T17:18:43Z</updated>
    <id>tag:dbriemann.github.io,2018-04-22:/blog/4-making-a-game-with-go-0-introduction.html</id>
    <link href="https://dbriemann.github.io/blog/4-making-a-game-with-go-0-introduction.html" rel="alternate"></link>
    <summary type="html">This is an introductory issue about the goals, choices and challenges of my new quest: making a game in Linux with a framework and not an engine. Here in issue #0 I will explain the whys, the hows and the don&amp;#39;ts and &lt;strong&gt;starting from the next issue I will write a tutorial alongside an open source game hosted on Github&lt;/strong&gt;. I hope you follow me along.</summary>
    <author>
      <name>David Linus Briemann</name>
      <email>ragingdave@mailbox.org</email>
    </author>
  </entry>
  <entry>
    <title>Introducing Glyph: Static Site Generator Powered by Github Issues and Pages</title>
    <updated>2018-04-06T16:08:58Z</updated>
    <id>tag:dbriemann.github.io,2018-04-06:/blog/2-introducing-glyph-static-site-generator-powered-by-github-issues-and-pages.html</id>
    <link href="https://dbriemann.github.io/blog/2-introducing-glyph-static-site-generator-powered-by-github-issues-and-pages.html" rel="alternate"></link>
    <summary type="html">Another blog and another static site generator? In 2018? I know what you think but please read a few lines first if you made it this far. This one is a little different from previous static site generators.. I promise! &lt;strong&gt;Oh and by the way, you are just reading a Github issue!&lt;/strong&gt;</summary>
    <author>
      <name>David Linus Briemann</name>
      <email>ragingdave@mailbox.org</email>
    </author>
  </entry>
  <entry>
    <title>Glyph Theme Test Issue</title>
    <updated>2018-03-27T13:21:26Z</updated>
    <id>tag:dbriemann.github.io,2018-03-27:/blog/1-glyph-theme-test-issue.html</id>
    <link href="https://dbriemann.github.io/blog/1-glyph-theme-test-issue.html" rel="alternate"></link>
    <summary type="html">While being the first issue of this blog this entry exists just to demonstrate the currently applied &lt;a href=&#34;https://github.com/dbriemann/glyph&#34; rel=&#34;nofollow&#34;&gt;Glyph&lt;/a&gt; theme. The content shown in this issue is taken from &lt;a href=&#34;https://gist.github.com/jonschlinkert/5854601&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt; and aims to provide a complete markdown overview.</summary>
    <author>
      <name>David Linus Briemann</name>
      <email>ragingdave@mailbox.org</email>
    </author>
  </entry>
</feed>